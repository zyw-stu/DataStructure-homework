#include <stdio.h>
#include <math.h>
#include "stack.h"
SqStack Q;
int a[9][9];//标记数组，若不能放置皇后，置为-1。
int available(SqStack* Q,int col,int row)//第col列的皇后能否放在第row行
{
    int j;
    for(j=1;j<col;j++)//检查与col-1列的皇后是否冲突
    {
        if(row==Q[j]) return 0;//行冲突
        if(abs(col-j)==abs(row-Q[j])) return 0;//对角线冲突
    }
    return i;
}
void queue(){
    int i,j;
    for(j=1;j<=8;j++)//按照列依次放置 
    {
        int flag=0;//找到第j列皇后放置的位置，falg=1
        for(i=1;i<=8;i++)//检查每一行是否可以放置
        {
            if(available(&Q,j,i)&&a[i][j]!=-1){//不冲突且之前没有走过
                Q.push(i); flag=1;//若不冲突，则入栈
		break;
            }
        }
        if(flag==0)//若第j列没有满足条件的放置位置，则回退到第j-1列
        {
            if(Q.empty()) printf("No solution!\n");//如果yi/
            else{
            Q.pop(); j--;
            a[Q[j],j]=-1;
            }
        }
    }
}

int main()
{
    InitQueue(&Q);
    Nqueen();//从第0行开始摆皇后
    if(!Q.empty()) Q.print();
	return 0; 
} 
